---
schemaVersion: 1.0.0
name: tre-service-guacamole-windowsvm-ouh2
version: 1.1.6
description: "An Azure TRE User Resource Template for Guacamole (Windows 10)"
dockerfile: Dockerfile.tmpl
registry: azuretre

custom:
  # For information on vm_sizes and image_options, see README.me in the guacamole/user-resources folder
  vm_sizes:
    # CPU-only VMs (ordered by price)
    "B-Series | 2 CPU | 4GB RAM | Text editing | £0.05/ hour": Standard_B2s
    "Dsv5 Series | 2 CPU | 8GB RAM | £0.15/ hour": Standard_D2s_v5
    "D4as_v5 Series | 4 CPU | 16GB RAM | £0.30/ hour": Standard_D4as_v5
    "Dsv5 Series | 4 CPU | 16GB RAM | £0.30/ hour": Standard_D4s_v5
    "F4s_v2 Series | 4 CPU | 16GB RAM | £0.30/ hour": Standard_F4s_v2
    "Dsv5 Series | 8 CPU | 32GB RAM | £0.65/ hour": Standard_D8s_v5
    "Easv4 Series | 8 CPU | 64GB RAM | £0.75/ hour": Standard_E8as_v4
    "Dsv5 Series | 16 CPU | 64GB RAM | £1.25/ hour": Standard_D16s_v5
    # GPU VMs - A10 Series (ordered by price)
    "NV6ads_A10_v5 Series | 6 CPU 55GB RAM | 1/6 A10 GPU 4GB RAM | £0.61/ hour": Standard_NV6ads_A10_v5
    "NV12ads_A10_v5 Series | 12 CPU 110GB RAM | 1/3 A10 GPU 8GB RAM | £1.22/ hour": Standard_NV12ads_A10_v5
    "NV18ads_A10_v5 Series | 18 CPU 220GB RAM | 1/2 A10 GPU 12GB RAM | £2.05/ hour": Standard_NV18ads_A10_v5
    "NV36ads_A10_v5 Series | 36 CPU 440GB RAM | 1 A10 GPU 24GB RAM | £4.11/ hour": Standard_NV36ads_A10_v5
    "NV72ads_A10_v5 Series | 72 CPU 880GB RAM | 2 A10 GPU 48GB RAM | £8.60/ hour": Standard_NV72ads_A10_v5
    # GPU VMs - H100 Series (ordered by price)
    "NC40ads_H100_v5 Series | 40 CPU 320GB RAM | 1 H100 NVL GPU 94GB RAM | £7.70/ hour": Standard_NC40ads_H100_v5
    "NC80adis_H100_v5 Series | 80 CPU 640GB RAM | 2 H100 NVL GPU 188GB RAM | £15.90/ hour": Standard_NC80adis_H100_v5
    # RETIRING - V100 Series (at bottom)
    "⚠️ RETIRING SEPT30 - NC6s_v3 Series | 6 CPU 112GB RAM | 1 V100 GPU 16GB RAM | £3.00/ hour": Standard_NC6s_v3
    "⚠️ RETIRING SEPT30 - NC6s_v3 Series | 12 CPU 224GB RAM | 2 V100 GPU 32GB RAM | £6.00/ hour": Standard_NC12s_v3
  image_options:
    "Windows 10":
      source_image_reference:
        publisher: MicrosoftWindowsDesktop
        offer: Windows-10
        sku: win10-22h2-pro-g2
        version: latest
      conda_config: false
      secure_boot_enabled: true
      vtpm_enabled: true
    "Windows 11":
      source_image_reference:
        publisher: microsoftwindowsdesktop
        offer: windows-11
        sku: win11-24h2-pro
        version: latest
      conda_config: false
      secure_boot_enabled: true
      vtpm_enabled: true
    "OUH Server 2019 Data Science VM":
      source_image_name: OUHWindowsImage
      install_ui: true
      conda_config: true
      secure_boot_enabled: false # dsvm-win-2019 is not a gen2 image
      vtpm_enabled: false
      # For information on using custom images, see README.me in the guacamole/user-resources folder
      # "Custom Image From Gallery":
      #   source_image_name: your-image
      #   conda_config: true

credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET
# Credentials for interacting with the AAD Auth tenant
  - name: auth_client_id
    env: AUTH_CLIENT_ID
  - name: auth_client_secret
    env: AUTH_CLIENT_SECRET
  - name: auth_tenant_id
    env: AUTH_TENANT_ID

parameters:
  - name: workspace_id
    type: string
  - name: tre_id
    type: string
  - name: parent_service_id
    type: string
    description: "Resource group containing the shared ACR"
    env: PARENT_SERVICE_ID
  - name: image_gallery_id
    type: string
    description: Azure resource ID for the compute image gallery to pull images from (if specifying custom images by name)
    default: ""
  - name: id
    type: string
    description: "An Id for this installation"
  - name: azure_environment
    type: string
    default: "AzureCloud"
    description: "Used by Azure CLI to set the Azure environment"
    env: id
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    env: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: os_image
    type: string
    default: "Windows 10"
  - name: vm_size
    type: string
    default: "F4s_v2 Series | 4 CPU | 16GB RAM | £0.15 / hour"
  - name: shared_storage_access
    type: boolean
    default: true
  - name: shared_storage_name
    type: string
    default: "vm-shared-storage"
  - name: owner_id
    type: string
  - name: arm_environment
    type: string
  - name: enable_cmk_encryption
    type: boolean
    default: false
  - name: key_store_id
    type: string
    default: ""

outputs:
  - name: ip
    type: string
    applyTo:
      - install
      - upgrade
  - name: hostname
    type: string
    applyTo:
      - install
      - upgrade
  - name: connection_uri
    type: string
    applyTo:
      - install
      - upgrade
  - name: azure_resource_id
    type: string
    applyTo:
      - install
      - start
      - stop
      - reset_password

mixins:
  - exec
  - terraform:
      clientVersion: 1.9.8
  - az:
      clientVersion: 2.67.0

install:
  - terraform:
      description: "Deploy Guacamole User Resource Service (Windows VM)"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        parent_service_id: ${ bundle.parameters.parent_service_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
        owner_id: ${ bundle.parameters.owner_id }
        enable_cmk_encryption: ${ bundle.parameters.enable_cmk_encryption }
        key_store_id: ${ bundle.parameters.key_store_id }
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: ip
        - name: hostname
        - name: connection_uri
        - name: azure_resource_id

upgrade:
  - terraform:
      description: "Update Guacamole User Resource Service (Windows VM)"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        parent_service_id: ${ bundle.parameters.parent_service_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
        owner_id: ${ bundle.parameters.owner_id }
        enable_cmk_encryption: ${ bundle.parameters.enable_cmk_encryption }
        key_store_id: ${ bundle.parameters.key_store_id }
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: ip
        - name: hostname
        - name: connection_uri
        - name: azure_resource_id

uninstall:
  - exec:
      description: "Delete the Extensions from the Terraform state manually"
      command: ./delete_vm_extensions.sh
      arguments:
        - ${ bundle.parameters.tfstate_resource_group_name }
        - ${ bundle.parameters.tfstate_storage_account_name }
        - ${ bundle.parameters.tfstate_container_name }
        - ${ bundle.parameters.id }
      envs:
        ARM_USE_AZUREAD: "true"
        ARM_USE_OIDC: "true"

  - terraform:
      description: "Delete the Guacamole User Resource Service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        parent_service_id: ${ bundle.parameters.parent_service_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
        owner_id: ${ bundle.parameters.owner_id }
        enable_cmk_encryption: ${ bundle.parameters.enable_cmk_encryption }
        key_store_id: ${ bundle.parameters.key_store_id }
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }

start:
  - terraform:
      arguments:
        - "output"
      description: "Get resource ID from Terraform outputs"
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - az:
      description: "Start the VM"
      arguments:
        - vm
        - start
      flags:
        ids: ${ bundle.outputs.azure_resource_id }

stop:
  - terraform:
      arguments:
        - "output"
      description: "Get VM hostname and rg from Terraform outputs"
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - az:
      description: "Stop the VM"
      arguments:
        - vm
        - deallocate
      flags:
        ids: ${ bundle.outputs.azure_resource_id }

reset_password:
  - terraform:
      arguments:
        - "output"
      description: "Get VM details from Terraform outputs"
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
        - name: vm_username
        - name: vm_password_secret_name
        - name: keyvault_name
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - exec:
      description: "Reset password and persist to keyvault"
      suppress-output: true
      command: ./reset_password.sh
      arguments:
        - ${ bundle.outputs.vm_password_secret_name }
        - ${ bundle.outputs.keyvault_name }
        - ${ bundle.outputs.vm_username }
        - ${ bundle.outputs.azure_resource_id }

---
schemaVersion: 1.0.0
name: tre-service-guacamole-linuxvm-ouh2
version: 1.0.13
description: "An Azure TRE User Resource Template for Guacamole (Linux)"
dockerfile: Dockerfile.tmpl
registry: azuretre

custom:
  # For information on vm_sizes and image_options, see README.me in the guacamole/user-resources folder
  vm_sizes:
    "2 CPU | 4GB RAM | Text editing | £0.05 / hour": Standard_B2s
    "2 CPU | 8GB RAM | £0.10 / hour": Standard_D2s_v5
    "4 CPU | 16GB RAM | £0.20 / hour": Standard_D4s_v5
    "8 CPU | 32GB RAM | £0.35 / hour": Standard_D8s_v5
    "8 CPU | 64GB RAM | £0.45 / hour": Standard_E8as_v4
    "16 CPU | 64GB RAM | £0.65 / hour": Standard_D16s_v5
    "6 CPU - 112GB RAM | 1 GPU - 16GB RAM | £2.98 / hour": Standard_NC6s_v3
    "12 CPU - 224GB RAM | 2 GPU - 32GB RAM | £5.96 / hour": Standard_NC12s_v3
  image_options:
    "Ubuntu 22.04 LTS":
      source_image_reference:
        publisher: canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts-gen2
        version: latest
        apt_sku: 22.04
      install_ui: true
      conda_config: true

    ## Removing custom Linux image as it becomes obsolete with the update to Ubuntu 22.04 and pre-installed software via vm_config.sh
    # "OUH Ubuntu 18.04 Data Science VM":
    #   source_image_name: OUHLinuxImage
      # source_image_reference:
      #   publisher: microsoft-dsvm
      #   offer: ubuntu-1804
      #   sku: 1804-gen2
      #   version: latest
      # install_ui: false
      # conda_config: true
    # For information on using custom images, see README.me in the guacamole/user-resources folder
    # "Custom Image From Gallery":
    #   source_image_name: your-image
    #   install_ui: true
    #   conda_config: true


credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET

parameters:
  - name: workspace_id
    type: string
  - name: tre_id
    type: string
  - name: azure_environment
    type: string
    default: "AzureCloud"
    description: "Used by Azure CLI to set the Azure environment"
  - name: parent_service_id
    type: string
    description: "Resource group containing the shared ACR"
    env: PARENT_SERVICE_ID
  - name: image_gallery_id
    type: string
    description: Azure resource ID for the compute image gallery to pull images from (if specifying custom images by name)
    default: ""

  # the following are added automatically by the resource processor
  - name: id
    type: string
    description: "An Id for this installation"
    env: id
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    env: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: arm_environment
    env: ARM_ENVIRONMENT
    type: string
    default: "public"
  - name: os_image
    type: string
    default: "Ubuntu 22.04 LTS"
  - name: vm_size
    type: string
    default: "4 CPU | 16GB RAM | £0.20 / hour"
  - name: shared_storage_access
    type: boolean
    default: true
  - name: shared_storage_name
    type: string
    default: "vm-shared-storage"

outputs:
  - name: ip
    type: string
    applyTo:
      - install
      - upgrade
  - name: hostname
    type: string
    applyTo:
      - install
      - upgrade
  - name: connection_uri
    type: string
    applyTo:
      - install
      - upgrade
  - name: azure_resource_id
    type: string
    applyTo:
      - install
      - start
      - stop
      - reset_password

mixins:
  - exec
  - terraform:
      clientVersion: 1.3.6
  - az:
      clientVersion: 2.37.0

install:
  - terraform:
      description: "Deploy Guacamole User Resource Service (Linux VM)"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        parent_service_id: ${ bundle.parameters.parent_service_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: ip
        - name: hostname
        - name: connection_uri
        - name: azure_resource_id

upgrade:
  - terraform:
      description: "Update Guacamole User Resource Service (Linux VM)"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        parent_service_id: ${ bundle.parameters.parent_service_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: ip
        - name: hostname
        - name: connection_uri
        - name: azure_resource_id

uninstall:
  - exec:
      description: "Delete the Extensions from the Terraform state manually"
      command: ./delete_vm_extensions.sh
      arguments:
        - ${ bundle.parameters.tfstate_resource_group_name }
        - ${ bundle.parameters.tfstate_storage_account_name }
        - ${ bundle.parameters.tfstate_container_name }
        - ${ bundle.parameters.id }

  - terraform:
      description: "Delete the Guacamole User Resource Service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        parent_service_id: ${ bundle.parameters.parent_service_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }

start:
  - terraform:
      arguments:
        - "output"
      description: "Get resource ID from Terraform outputs"
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - az:
      description: "Start the VM"
      arguments:
        - vm
        - start
      flags:
        ids: ${ bundle.outputs.azure_resource_id }

stop:
  - terraform:
      arguments:
        - "output"
      description: "Get VM resource_id from Terraform outputs"
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - az:
      description: "Stop the VM"
      arguments:
        - vm
        - deallocate
      flags:
        ids: ${ bundle.outputs.azure_resource_id }

reset_password:
  - terraform:
      arguments:
        - "output"
      description: "Get VM details from Terraform outputs"
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: ${ bundle.parameters.id }
      outputs:
        - name: azure_resource_id
        - name: vm_username
        - name: vm_password_secret_name
        - name: keyvault_name
  - az:
      description: "Set Azure Cloud Environment"
      arguments:
        - cloud
        - set
      flags:
        name: ${ bundle.parameters.azure_environment }
  - az:
      description: "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: ${ bundle.credentials.azure_client_id }
  - exec:
      description: "Reset password and persist to keyvault"
      suppress-output: true
      command: ./reset_password.sh
      arguments:
        - ${ bundle.outputs.vm_password_secret_name }
        - ${ bundle.outputs.keyvault_name }
        - ${ bundle.outputs.vm_username }
        - ${ bundle.outputs.azure_resource_id }
